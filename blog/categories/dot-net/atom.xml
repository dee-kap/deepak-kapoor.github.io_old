<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: .NET | Deepak Kapoor]]></title>
  <link href="http://www.deepakkapoor.net/blog/categories/dot-net/atom.xml" rel="self"/>
  <link href="http://www.deepakkapoor.net/"/>
  <updated>2014-01-07T07:52:48+11:00</updated>
  <id>http://www.deepakkapoor.net/</id>
  <author>
    <name><![CDATA[Deepak Kapoor]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Error Installing ASP.NET MVC 4 with Web Platform Installer]]></title>
    <link href="http://www.deepakkapoor.net/2012/04/24/error-installing-asp-net-mvc-4-with-web-platform-installer/"/>
    <updated>2012-04-24T00:00:00+10:00</updated>
    <id>http://www.deepakkapoor.net/2012/04/24/error-installing-asp-net-mvc-4-with-web-platform-installer</id>
    <content type="html"><![CDATA[<p>I’m starting this post with a rant. Here it goes. Web Platform Installer has got to be the most pathetic piece of crap ever produced by Microsoft. It just does not work. I can’t understand how they are able to push out such a piece of garbage. I’m angry, and I have my reasons. So I want to play with ASP.NET MVC 4. I go to the website and I attempt an install. After about 5 minutes Web Platform Installer shows me this:</p>


<p> <p><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="Web Platform Installer Error" border="0" alt="Web Platform Installer Error" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2012/04/SNAGHTML417603de.png" width="700" height="480"></p> <p>Failed to Install? Why? </p> <p>You are sorry? You’ve got to be kidding me. </p> <p>Now I’ve had my <a href="http://www.debugrelease.com/wat080-failed-to-locate-the-windows-azure-sdk-please-make-sure-the-windows-azure-sdk-v1-5-is-installed/">adventures with Web Platform Installer</a> in the past. I should not have bothered with it again. Next time I’m not touching this thing. Rant over.</p> <p>To install it without raising your blood pressure, follow this link:</p> <p><a title="http://download.microsoft.com/download/3/1/0/310C7C02-9E25-4A11-88E0-4CEC53556CC1/AspNetMVC4Setup.exe" href="http://download.microsoft.com/download/3/1/0/310C7C02-9E25-4A11-88E0-4CEC53556CC1/AspNetMVC4Setup.exe"><a href="http://download.microsoft.com/download/3/1/0/310C7C02-9E25-4A11-88E0-4CEC53556CC1/AspNetMVC4Setup.exe">http://download.microsoft.com/download/3/1/0/310C7C02-9E25-4A11-88E0-4CEC53556CC1/AspNetMVC4Setup.exe</a></a></p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WAT080: Failed to locate the Windows Azure SDK. Please make sure the Windows Azure SDK v1.5 is installed.]]></title>
    <link href="http://www.deepakkapoor.net/2012/02/07/wat080-failed-to-locate-the-windows-azure-sdk-please-make-sure-the-windows-azure-sdk-v1-5-is-installed/"/>
    <updated>2012-02-07T00:00:00+11:00</updated>
    <id>http://www.deepakkapoor.net/2012/02/07/wat080-failed-to-locate-the-windows-azure-sdk-please-make-sure-the-windows-azure-sdk-v1-5-is-installed</id>
    <content type="html"><![CDATA[<p>After installing Windows Azure SDK and Visual Studio tools November 2011, I got this error when compiling an existing Cloud project.</p>


<p>  <p><font color="#c0504d">WAT080: Failed to locate the Windows Azure SDK. Please make sure the Windows Azure SDK v1.5 is installed.</font></p>  <p>This post documents the roller coaster ride I went through to solve the problem. If you are interested in just the solution then here it is:</p>  <p><font color="#008080">Download the bits from <a href="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=28045">this page</a> and install them manually.</font> </p>  <p>If you are interested in how I got to the solution then read on. </p>  <p>Before anything, let me clarify that I already had an older version of Azure SDK and tools on my machine. I used Web Platform installer to install the latest Azure SDK and Visual Studio Tools i.e. November update. Then a drama started. </p>  <p>The build error I got said that I should make sure that Windows Azure SDK v1.5 is installed. But I already installed v1.6. If the project files were changed between versions of tools then they should have been upgraded to latest version by Visual Studio. This did not happen. My first maneuver was to re-install Visual Studio tools. I downloaded just the standalone installer for tools and tried installing it. I got this error.</p>  <p>&#160;<img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2012/02/image.png" width="485" height="300" /></p>  <p>The log file showed me these errors:</p> <font color="#0000ff" size="1">[16AC:16B0][2012-02-07T07:21:21]: Error 0x80070643: Failed to install MSI package.    <br />[16AC:16B0][2012-02-07T07:21:21]: Error 0x80070643: Failed to execute MSI package.     <br />[1744:1748][2012-02-07T07:21:21]: Error 0x80070643: Failed to configure per-machine MSI package.     <br />[1744:1748][2012-02-07T07:21:21]: Error 0x80070643: Failed to execute MSI package.</font>  <p>&#160;</p>  <p>I was in no mood for looking into the details of errors in the log file. I just wanted to get going with Azure and not worry about installer logs. So I uninstalled the SDK, Authoring Tools and Visual Studio tools to get a clean Azure free environment.</p>  <p><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2012/02/image1.png" width="321" height="51" /></p>  <p>After uninstalling Azure bits I fired up Web Platform Installer and installed Azure SDK and tools. Little did I know that this was not going to work. Here is a screenshot of the errors I got.</p>  <p><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2012/02/image2.png" width="622" height="414" /></p>  <p>By this time I was annoyed (you may substitute “annoyed” with a more colorful word of your choice). Web Platform Installer should just do it, right? It should take care of dependencies, right? Well that was not the case.</p>  <p>By this time I gave up on Web Platform Installer and downloaded standalone Azure bits and decided to install them manually. Here is the download link:</p>  <p><a title="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=28045" href="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=28045"><a href="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;amp;id=28045">http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;amp;id=28045</a></a></p>  <p>I downloaded and installed the ones highlighted below.</p>  <p><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2012/02/image3.png" width="641" height="458" /></p>  <p>After installing Azure Emulator, Libs and SDK, I installed Visual Studio Tools and it installed correctly.</p>  <p><img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2012/02/image4.png" width="485" height="300" /></p>  <p>I opened the project which was giving me a build error. Visual Studio asked me to convert it to a newer format. I happily obliged. Finally I saw <font color="#00c100"><strong>Build Succeeded</strong></font>.</p>  <p>Although not a big deal specially after the issue was resolved, I still feel that installer could have done a better job. Anyhow, I’m back in the cloud <img style="border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2012/02/wlEmoticon-smile.png" /></p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Shortener API For .NET Written In C#]]></title>
    <link href="http://www.deepakkapoor.net/2011/01/15/google-shortener-api-with-dotnet-written-in-c-sharp/"/>
    <updated>2011-01-15T00:00:00+11:00</updated>
    <id>http://www.deepakkapoor.net/2011/01/15/google-shortener-api-with-dotnet-written-in-c-sharp</id>
    <content type="html"><![CDATA[<p><a href="https://code.google.com/p/n-gshortener/"><img style="background-image: none; border-right-width: 0px; margin: 0px 10px 10px; padding-left: 0px; padding-right: 0px; display: inline; float: left; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" align="left" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2011/01/image.png" width="56" height="59" /></a>Google Shortener is a service provided by Google to create short URLs. Google Shortener has been available for some time now but only recently Google released a public API to access this service programmatically. Today I decided to try it out and wrote some C# code to work with the API. I will describe what I did in this post.</p>


<p>  <h3>A bit about the API</h3>  <p>Like other URL shorteners, Google API also takes in a long URL and gives you back a short one. When you click on the short URL, you end up at the same location on web as you did with your original long URL.</p>  <p>The API itself is implemented as a RESTful service and is very simple. You can read the overview and reference for API <a href="http://code.google.com/apis/urlshortener/overview.html">here</a>.</p>  <h3>.NET Wrapper</h3>  <p>I wanted to use the API in my .NET application so I created a wrapper. I have made the source code available at <a href="https://code.google.com/p/n-gshortener/">code.google.com</a>. Feel free to download and play with it.</p>  <p>There are three methods in Google Shortener API:</p>  <ol>   <li>url.insert – Shrinks a Url. </li>    <li>url.get – Returns the long Url for a valid short url. </li>    <li>url.list – Returns a list of Urls shortened by an authenticated user. Analytics data is also returned by this method. </li> </ol>  <p>If you want analytics for your Url then you must invoke the methods by passing in an API key. You can get your API key from <a href="http://code.google.com/apis/console/">Google API Console</a>.</p>  <p>Enough talk. Let me show you the code. The main class in the wrapper is called Shortener which contains two methods: GetShortUrl() and GetLongUrl(). An API key can be passed in to the constructor of Shortener and the API key will be used for all subsequent requests for that instance.</p>

<pre class="lang:c# decode:true " >
public Reply GetShortUrl(string longUrl)
{
  string data = &quot;{&quot;longUrl&quot;:&quot;&quot; + longUrl + &quot;&quot;}&quot;;
  string postUrl = googleShortenerUrl;
  string response = HttpHelper.HttpPOST(postUrl, data);
  return DeserializeJSON(response);
}

public Reply GetLongUrl(string shortUrl)
{
  string getUrl = googleShortenerUrl + &quot;&amp;amp;shortUrl=&quot; + shortUrl;
  string response = HttpHelper.HttpGET(getUrl);
  return DeserializeJSON(response);
}

</pre>


<p>The response received from Google is deserialized into a Reply class.</p>

<pre class="lang:c# decode:true " >
public class Reply
{
  public string kind { get; set; }

  public string id { get; set; }

  public string longUrl { get; set; }

  public string status { get; set; }
}
</pre>


<p>GET and POST are done by using HttpHelper class. <a href="https://code.google.com/p/n-gshortener/">Download</a> the code to see this class.</p>  <h3>Conclusion</h3>  <p>Google Shortener API is as simple as it gets. The API also let’s you retrieve analytics data for URLs. I have created a .NET wrapper for the API and have implemented functionality to get short URLs and long URLs. Next steps for this little project are to implement list method, implement authentication support and make the API a bit more rich by enhancing Reply class to support strongly typed members rather than all strings.</p>  <p>One final time. <a href="https://code.google.com/p/n-gshortener/">Link to code</a>.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working With SQL Server HierarchyId Data Type In .NET Application]]></title>
    <link href="http://www.deepakkapoor.net/2010/11/19/working-with-sql-server-hierarchyid-data-type-in-net-application/"/>
    <updated>2010-11-19T00:00:00+11:00</updated>
    <id>http://www.deepakkapoor.net/2010/11/19/working-with-sql-server-hierarchyid-data-type-in-net-application</id>
    <content type="html"><![CDATA[<p>Recently I was working with some hierarchical data stored in SQL Server. The data was related to products where each product is a package which includes other packages which in turn can include individual products. The data was stored in a table where a a product row had a parentId column which indicated the parent of that product. This is a how we have stored hiearchies in tables. The solution has worked for years but is it the most efficient way to store hiearchichal data? Perhaps not. That’s why SQL Server 2008 had a data type called hierarchyId. This post is about working with&#160; the data type. Rather than divulging details of the application I’m working on commercially, I will use Northwind database as an example to demonstrate concepts talked in here.</p>


<p>  <p>&#160;</p>  <h4>Basic Setup</h4>  <p>Northwind database has a table called Employees. This table stores information about an Employee and it also stores information about who an employee reports to. This structure is maintained by using a ReportsTo column in Employees table which links to EmployeeId within the same table.</p>  <p>&#160;</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image25.png" width="237" height="464" /> </p>  <p>As the objective here is to store this information using hierarchyId type, I created a new table called Employees2. To make things simple I only included EmployeeId, LastName and FirstName columns other than EmployeeNode which stores the hierarchical information and PlaceINHieararchy which indicates the place of a particular employee in organizational hierarchy. For example employee A can report to Employee B who reports to Employee C, so employee A’s place in hierarchy is 3. </p>  <p>This is the script I used to create Employees2 table.</p></p>

<pre class="lang:tsql decode:true " >
CREATE TABLE Employees2
(EmployeeNode hierarchyid NOT NULL PRIMARY KEY NONCLUSTERED, 
EmployeeId INT NOT NULL, 
LastName NVARCHAR(20) NOT NULL, 
FirstName NVARCHAR(10) NOT NULL, 
PlaceInHierarchy AS EmployeeNode.GetLevel())
</pre>




<h4>Populating Data </h4>




<p>To have a meaningful example I decided to insert some data into Employees2 table from Employees table. This script inserts data into Employees2 table. It may not be the best way to insert this data especially me using a temp table. But this is a dirty script which means that I’ll only run it once so I am not too worried about its elegance.</p>




<pre class="lang:tsql decode:true " >
WITH Emp AS 
    (SELECT 
    '/'+CAST(EmployeeId AS VARCHAR(49)) AS PATH, 
    EmployeeId FROM dbo.Employees b 
    WHERE 
    b.ReportsTo IS NULL 
    UNION ALL 
    SELECT 
    CAST(Emp.path+'/'+CAST(b.EmployeeId AS VARCHAR(4)) AS VARCHAR(50)), 
    b.EmployeeId 
    FROM 
    dbo.Employees b JOIN Emp ON b.ReportsTo = Emp.EmployeeId)
SELECT * INTO #temp FROM Emp



INSERT INTO 
Employees2(EmployeeNode, 
EmployeeId, 
LastName, 
FirstName)
SELECT 
CAST( t.PATH+'/' AS hierarchyId), 
b.EmployeeID, 
b.LastName, 
b.FirstName
FROM 
#temp t JOIN dbo.Employees b ON t.EmployeeId = b.EmployeeId
ORDER BY 1
</pre>




<p>A simple select from Employees2 table which shows data inserted into employees2 table.</p>




<p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image26.png" width="519" height="196" /> </p>




<h4>Writing .NET Code</h4>




<p>After creating a table and inserting data my first thought was how can I use Entity Framework or LINQ To SQL to do CRUD on Employees2 table. Unfortunately those are not valid options. Microsoft did not provide any support to work with hierarchyId data type in either Entity Framework or LINQ To SQL. A major draw back which I hope will be addressed in future versions of these ORMs.</p>




<p>Lack of support for hierarcyId data type in Entity Framework and LINQ To SQL does not mean that you don’t have any options. Good old raw ADO.NET is still around and comes in handy when working with hierarchyId data type. Another good thing is that Sql Server data type hierarchyId is available as SqlHierarchyId struct in Microsoft.SqlServer.Types assembly. To use the struct I added a reference to the Microsoft.SqlServer.Types assembly. The location of this assembly on my machine is</p>




<p><font color="#0000a0"><strong>C:Program Files (x86)Microsoft SQL Server100SDKAssemblies</strong></font></p>




<p>Next I wanted to write some code which can retrieve data from employees2 table and display it on a console. This method fetches all rows form employees2 table and displays the EmployeeNode column. Note how I store the value of EmployeeNode column into a employeeNode SqlHierarchyId struct and then I call a ToString() method on the struct.</p>




<pre class="lang:c# decode:true " >
static void GetEmployeeNodes()
{ 
  using (SqlConnection cn = new SqlConnection(connectionString)) 
  { 
    string query = "SELECT * FROM employees2"; 
    SqlCommand cmd = new SqlCommand(query, cn); 
    cn.Open(); 
    SqlDataReader reader = cmd.ExecuteReader(); 

    while (reader.Read()) 
    { 
      SqlHierarchyId employeeNode = new SqlHierarchyId(); 
      employeeNode = (SqlHierarchyId)reader["EmployeeNode"]; 
      Console.WriteLine("Employee Node = " + employeeNode.ToString()); 
    } 
  }
}
</pre>




<p>Output of the method looked like this.</p>




<p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image27.png" width="451" height="114" /> </p>




<p>I also wrote a method which displays ancestors for a particular employee. Getting an ancestor for a node is done by calling GetAncestor method on employeeNode which is of type SqlHierarchyId .</p>




<pre class="lang:c# decode:true " >
static void GetEmployeeDetails(int employeeId)
{ 
  using (SqlConnection cn = new SqlConnection(connectionString)) 
  { 
    string query = 
      "SELECT * FROM employees2 WHERE employeeId = " + employeeId.ToString(); 
    SqlCommand cmd = new SqlCommand(query, cn); 
    cn.Open(); 
    SqlDataReader reader = cmd.ExecuteReader(); 
        
    string output = string.Empty; 
    
    while (reader.Read()) 
    { 
      SqlHierarchyId employeeNode = new SqlHierarchyId(); 
      employeeNode = (SqlHierarchyId)reader["EmployeeNode"]; 
      Console.WriteLine("Employee Node = " + employeeNode.ToString()); 
      output = string.Format("{0} {1}", reader["LastName"], reader["FirstName"]); 
      var ancestorNode = employeeNode.GetAncestor(1); 

      while (!ancestorNode.IsNull) 
      { 
        using (SqlConnection cn2 = new SqlConnection(connectionString)) 
        { 
          query = 
            "Select * from employees2 where EmployeeNode=hierarchyid::Parse(@node)"; 
          SqlCommand cmd2 = new SqlCommand(query, cn2); 
          cmd2.Parameters.AddWithValue("@node", ancestorNode.ToString()); 
          cn2.Open(); 
          SqlDataReader reader2 = cmd2.ExecuteReader(); 
                    
          while (reader2.Read()) 
          { 
            output += 
              string.Format("/{0} {1}", reader2["LastName"], reader2["FirstName"]); 
          } 
                    
          ancestorNode = ancestorNode.GetAncestor(1); 
        } 
      } 
    } 
    Console.WriteLine(output); 
  }
}
</pre>




<p>The output I got.</p>




<p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image28.png" width="450" height="50" /> </p>




<h4>A bit about SqlHierarchyId struct</h4>




<p>SqlHierarchyId struct provides other methods like GetDescendant, GetLevel, GetRoot etc. to retrieve more information. In my personal opinion I think that Microsoft needs to do a little more work on this and make it more useful. Of course the best thing to do will be to provide support for hierarchyId data type in Entity Framework and LINQ To SQL (if it’s not already dead).</p>




<p>I hope you enjoyed reading the post as much as I enjoyed writing it and learning something I didn’t know.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use LINQPad To Query Entity Framework]]></title>
    <link href="http://www.deepakkapoor.net/2010/11/17/use-linqpad-to-query-entity-framework/"/>
    <updated>2010-11-17T00:00:00+11:00</updated>
    <id>http://www.deepakkapoor.net/2010/11/17/use-linqpad-to-query-entity-framework</id>
    <content type="html"><![CDATA[<p>LINQPad is a must have tool for all .NET developers who write LINQ queries. It allows you to write and execute LINQ queries without compiling your code. In this post I will show you how to setup LINQPad to work along with Entity Framework. </p>


<p>  <p>The way LINQPad works with Entity Framework is that it consumes the EDM you would have generated by using Visual Studio. Your model could be in a class library and LINQPad can use that. For this example I have already created a class library project which contains my model. The model is generated over Northwind database.</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image20.png" width="234" height="107" /> </p>  <p>After successfully compiling my project I launched LINQPad and clicked on Add connection. A dialog box appears which allows you to choose a data context. You can either build a context by connecting to a data source or you can build one from an assembly. In this case I selected the second radio button and clicked on Entity Framework.</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image21.png" width="540" height="397" /></p>  <p>Click Next and LINQPad then gives you an option to browse for the assembly. Click on browse next to “Path to custom assembly” and browse to the assembly which contains the model.</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image22.png" width="439" height="537" /> </p>  <p>Once an assembly which contains a Entity Framework model is selected, LINQPad shows the models within that assembly.</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image23.png" width="540" height="290" /> </p>  <p>Click OK and OK again on the LINQPad Connection dialog. LINQPad is now connected to the model and you can run queries against it.</p>  <p><img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="https://googledrive.com/host/0B6PDO8HPEQZNZWpTRms0ZWtlaUU/uploads/2010/11/image24.png" width="539" height="433" /> </p>  <p><a href="http://www.linqpad.net">Download link for LINQPad</a>.</p></p>
]]></content>
  </entry>
  
</feed>
